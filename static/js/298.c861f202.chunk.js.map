{"version":3,"file":"static/js/298.c861f202.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.style.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.style.js","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.style.js","components/ContactFilter/ContactFilter.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;","import styled from \"styled-components\";\n\nexport const FormContact = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ContactFormLabel= styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const FormInput = styled.input`\n  display: flex;\n  flex-direction: column;\n  margin: 10px auto;\n  align-items: center;\n  font-size: 20px;\n  text-align: left;\n  padding: 5px 20px;\n    `;\n\nexport const FormButton = styled.button`\n  padding: 8px 16px;\n  margin-bottom: 10px;\n  border-radius: 2px;\n  background-color: lightseagreen;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  max-width: 300px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n  0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover {\n    background-color: teal;\n  }\n  &:focus {\n    background-color: teal;\n  }\n `;","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/contacts/contacts-operations\";\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { FormContact } from \"./ContactForm.style\";\nimport { FormInput } from \"./ContactForm.style\";\nimport { FormButton } from \"./ContactForm.style\";\nimport { ContactFormLabel } from \"./ContactForm.style\";\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n\n  const handleChange = event => {\n      const {name, value} = event.target;\n\n      switch(name) {\n        case 'name':\n        setName(value);\n        break;\n\n        case 'number':\n          setNumber(value);\n          break;\n\n          default: \n          return;\n      }\n    };\n\n    const handleFormSubmit = event => {\n    event.preventDefault();\n    const contactsLists = [...items];\n    if (contactsLists.findIndex(contact => name === contact.name) !== -1) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n    return (\n    <FormContact onSubmit={handleFormSubmit}>\n        <ContactFormLabel>\n      Name<FormInput\n  type=\"text\"\n  name=\"name\"\n  value={name}\n  onChange={handleChange}\n  placeholder='Ex: David Guetta'\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n  required\n/>\n      </ContactFormLabel>\n      <ContactFormLabel>\n      Number<FormInput\n  type=\"tel\"\n  name=\"number\"\n  value={number}\n  onChange={handleChange}\n  placeholder='Ex: XXX-XX-XX'\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n  required\n/>\n      </ContactFormLabel>\n      <FormButton type='submit'>Add Contact</FormButton>\n    </FormContact>\n    )};\n","import styled from \"styled-components\";\n\nexport const ContactListCantainer = styled.ul`\n    display: flex;\n    flex-direction: column;\n    list-style: none;\n`;\n\n\nexport const ContactListItem = styled.li`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 40px;\n    padding: 10px;\n    `;\n\nexport const ContactListButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: lightseagreen;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n  0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover {\n    background-color: teal;\n  }\n  &:focus {\n    background-color: teal;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/contacts-selectors';\nimport { ContactListCantainer } from './ContactList.style';\nimport { ContactListItem } from './ContactList.style';\nimport { ContactListButton } from './ContactList.style';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n\nexport const ContactList = () => {\n\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(deleteContact(id));\n\nreturn (\n    <ContactListCantainer>\n{visibleContacts.map((contact, id) => (\n  <ContactListItem key={id}>\n    {contact.name}: {contact.number}\n    <ContactListButton type=\"button\" onClick={() => handleDelete(contact.id)}>Delete\n    </ContactListButton>\n  </ContactListItem>\n))}  \n    </ContactListCantainer>\n);\n};\n","import styled from \"styled-components\";\n\nexport const FilterLabel= styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const FilterInput = styled.input`\n  display: flex;\n  flex-direction: column;\n  margin: 10px auto;\n  align-items: center;\n  font-size: 20px;\n  text-align: left;\n  padding: 5px 20px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice'; \nimport { selectFilter } from 'redux/contacts/contacts-selectors';\nimport { FilterInput } from './ContactFilter.style';\nimport { FilterLabel } from './ContactFilter.style';\n\n\nexport const Filter = () => {\n\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <div>\n      <FilterLabel>Find contacts\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter contact\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n     </FilterLabel>\n    </div>\n  );\n\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { selectIsLoading } from 'redux/contacts/contacts-selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { Filter } from 'components/ContactFilter/ContactFilter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n     <HelmetProvider>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      </HelmetProvider>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","FormContact","styled","ContactFormLabel","FormInput","FormButton","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","event","target","value","reset","onSubmit","preventDefault","findIndex","contact","alert","addContact","type","onChange","placeholder","pattern","title","required","ContactListCantainer","ContactListItem","ContactListButton","ContactList","visibleContacts","toLowerCase","includes","getVisibleContacts","map","id","onClick","deleteContact","handleDelete","FilterLabel","FilterInput","Filter","setFilter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}